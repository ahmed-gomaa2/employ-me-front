[{"E:\\Portifolio\\EmployMe\\client\\src\\index.js":"1","E:\\Portifolio\\EmployMe\\client\\src\\App.js":"2","E:\\Portifolio\\EmployMe\\client\\src\\reportWebVitals.js":"3","E:\\Portifolio\\EmployMe\\client\\src\\component\\auth\\Login.js":"4","E:\\Portifolio\\EmployMe\\client\\src\\component\\auth\\Register.js":"5","E:\\Portifolio\\EmployMe\\client\\src\\store.js":"6","E:\\Portifolio\\EmployMe\\client\\src\\reducers\\index.js":"7","E:\\Portifolio\\EmployMe\\client\\src\\reducers\\alert.js":"8","E:\\Portifolio\\EmployMe\\client\\src\\actions\\types.js":"9","E:\\Portifolio\\EmployMe\\client\\src\\actions\\alert.js":"10","E:\\Portifolio\\EmployMe\\client\\src\\component\\layout\\Navbar.js":"11","E:\\Portifolio\\EmployMe\\client\\src\\component\\layout\\Landing.js":"12","E:\\Portifolio\\EmployMe\\client\\src\\component\\layout\\Alert.js":"13","E:\\Portifolio\\EmployMe\\client\\src\\actions\\auth.js":"14","E:\\Portifolio\\EmployMe\\client\\src\\reducers\\auth.js":"15","E:\\Portifolio\\EmployMe\\client\\src\\utls\\setAuthToken.js":"16","E:\\Portifolio\\EmployMe\\client\\src\\component\\dashboard\\Dashboard.js":"17","E:\\Portifolio\\EmployMe\\client\\src\\component\\routing\\PrivateRoute.js":"18","E:\\Portifolio\\EmployMe\\client\\src\\reducers\\profile.js":"19","E:\\Portifolio\\EmployMe\\client\\src\\actions\\profile.js":"20","E:\\Portifolio\\EmployMe\\client\\src\\component\\layout\\Spinner.js":"21","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile-form\\CreateProfile.js":"22","E:\\Portifolio\\EmployMe\\client\\src\\component\\dashboard\\DashboardAction.js":"23","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile-form\\EditProfile.js":"24","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile-form\\AddExperience.js":"25","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile-form\\AddEducation.js":"26","E:\\Portifolio\\EmployMe\\client\\src\\component\\dashboard\\Experience.js":"27","E:\\Portifolio\\EmployMe\\client\\src\\component\\dashboard\\Education.js":"28","E:\\Portifolio\\EmployMe\\client\\src\\component\\profiles\\Profiles.js":"29","E:\\Portifolio\\EmployMe\\client\\src\\component\\profiles\\ProfileItem.js":"30","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\Profile.js":"31","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileTop.js":"32","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileAbout.js":"33","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileExperience.js":"34","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileEducation.js":"35","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileGithub.js":"36","E:\\Portifolio\\EmployMe\\client\\src\\reducers\\post.js":"37","E:\\Portifolio\\EmployMe\\client\\src\\component\\posts\\Posts.js":"38","E:\\Portifolio\\EmployMe\\client\\src\\actions\\post.js":"39","E:\\Portifolio\\EmployMe\\client\\src\\component\\posts\\PostItem.js":"40","E:\\Portifolio\\EmployMe\\client\\src\\component\\posts\\PostForm.js":"41","E:\\Portifolio\\EmployMe\\client\\src\\component\\post\\Post.js":"42","E:\\Portifolio\\EmployMe\\client\\src\\component\\post\\CommentForm.js":"43","E:\\Portifolio\\EmployMe\\client\\src\\component\\post\\CommentItem.js":"44"},{"size":330,"mtime":1612286069779,"results":"45","hashOfConfig":"46"},{"size":2724,"mtime":1612517140727,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":2340,"mtime":1611829296865,"results":"49","hashOfConfig":"46"},{"size":3227,"mtime":1612282904290,"results":"50","hashOfConfig":"46"},{"size":383,"mtime":1611756334619,"results":"51","hashOfConfig":"46"},{"size":244,"mtime":1612377832955,"results":"52","hashOfConfig":"46"},{"size":454,"mtime":1611760396937,"results":"53","hashOfConfig":"46"},{"size":1040,"mtime":1612638355169,"results":"54","hashOfConfig":"46"},{"size":490,"mtime":1611821858852,"results":"55","hashOfConfig":"46"},{"size":1842,"mtime":1612378842596,"results":"56","hashOfConfig":"46"},{"size":1226,"mtime":1611853885475,"results":"57","hashOfConfig":"46"},{"size":519,"mtime":1611821568753,"results":"58","hashOfConfig":"46"},{"size":2413,"mtime":1611855085984,"results":"59","hashOfConfig":"46"},{"size":1315,"mtime":1612053107726,"results":"60","hashOfConfig":"46"},{"size":258,"mtime":1611826182086,"results":"61","hashOfConfig":"46"},{"size":2012,"mtime":1612286117047,"results":"62","hashOfConfig":"46"},{"size":617,"mtime":1611851508378,"results":"63","hashOfConfig":"46"},{"size":1258,"mtime":1612154360042,"results":"64","hashOfConfig":"46"},{"size":6274,"mtime":1612104285356,"results":"65","hashOfConfig":"46"},{"size":296,"mtime":1611854079066,"results":"66","hashOfConfig":"46"},{"size":7112,"mtime":1612286288001,"results":"67","hashOfConfig":"46"},{"size":717,"mtime":1611954788657,"results":"68","hashOfConfig":"46"},{"size":8880,"mtime":1612286660714,"results":"69","hashOfConfig":"46"},{"size":3447,"mtime":1612052267263,"results":"70","hashOfConfig":"46"},{"size":3437,"mtime":1612286030816,"results":"71","hashOfConfig":"46"},{"size":1776,"mtime":1612106830932,"results":"72","hashOfConfig":"46"},{"size":1767,"mtime":1612106969116,"results":"73","hashOfConfig":"46"},{"size":1395,"mtime":1612313150387,"results":"74","hashOfConfig":"46"},{"size":985,"mtime":1612286243410,"results":"75","hashOfConfig":"46"},{"size":2899,"mtime":1612317128793,"results":"76","hashOfConfig":"46"},{"size":2621,"mtime":1612314964477,"results":"77","hashOfConfig":"46"},{"size":1026,"mtime":1612315663417,"results":"78","hashOfConfig":"46"},{"size":809,"mtime":1612316319842,"results":"79","hashOfConfig":"46"},{"size":907,"mtime":1612316585583,"results":"80","hashOfConfig":"46"},{"size":2089,"mtime":1612317698451,"results":"81","hashOfConfig":"46"},{"size":1986,"mtime":1612638921805,"results":"82","hashOfConfig":"46"},{"size":1058,"mtime":1612515423474,"results":"83","hashOfConfig":"46"},{"size":4115,"mtime":1612640788840,"results":"84","hashOfConfig":"46"},{"size":2804,"mtime":1612517655181,"results":"85","hashOfConfig":"46"},{"size":1099,"mtime":1612516465166,"results":"86","hashOfConfig":"46"},{"size":1358,"mtime":1612640137209,"results":"87","hashOfConfig":"46"},{"size":1138,"mtime":1612639202810,"results":"88","hashOfConfig":"46"},{"size":1668,"mtime":1612640662648,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1dbn17v",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Portifolio\\EmployMe\\client\\src\\index.js",[],["188","189"],"E:\\Portifolio\\EmployMe\\client\\src\\App.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\reportWebVitals.js",[],["190","191"],"E:\\Portifolio\\EmployMe\\client\\src\\component\\auth\\Login.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\auth\\Register.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\store.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\reducers\\index.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\reducers\\alert.js",["192"],"import {SET_ALERT, REMOVE_ALERT} from \"../actions/types\";\r\nconst initialState = [];\r\n\r\nexport default function(state= initialState, action) {\r\n\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            console.log(payload);\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","E:\\Portifolio\\EmployMe\\client\\src\\actions\\types.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\actions\\alert.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\layout\\Navbar.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\layout\\Landing.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\layout\\Alert.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\actions\\auth.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\reducers\\auth.js",["193"],"import {\r\n    REGISTER_FAIL,\r\n    REGISTER_SUCCESS,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","E:\\Portifolio\\EmployMe\\client\\src\\utls\\setAuthToken.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\dashboard\\Dashboard.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\routing\\PrivateRoute.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\reducers\\profile.js",["194"],"import {GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_PROFILES, GET_REPOS} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\Portifolio\\EmployMe\\client\\src\\actions\\profile.js",["195"],"import axios from \"axios\";\r\nimport {setAlert} from \"./alert\";\r\n\r\nimport {\r\n    CLEAR_PROFILE,\r\n    DELETE_ACCOUNT,\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from \"./types\";\r\n\r\n//Get the current user profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.get('api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    }catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })\r\n    }catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n// Get profile by id\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    }catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        })\r\n    }catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated': 'Profile created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    }catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    }catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n}\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    }catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        })\r\n    }\r\n};\r\n\r\n// Delete an experience\r\nexport const deleteExp = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n           type: UPDATE_PROFILE,\r\n           payload: res.data\r\n        });\r\n        dispatch(setAlert('Experience Removed', 'success'));\r\n    }catch(err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Delete an education\r\nexport const deleteEdu = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n           type: UPDATE_PROFILE,\r\n           payload: res.data\r\n        });\r\n        dispatch(setAlert('Education Removed', 'success'));\r\n    }catch(err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Are you sure? This can Not be undone!')) {\r\n        try {\r\n            const res = await axios.delete(`/api/profile`);\r\n\r\n            dispatch({type: DELETE_ACCOUNT});\r\n            dispatch({type: CLEAR_PROFILE});\r\n            dispatch(setAlert('Your account has been permenantly deleted'));\r\n        }catch(err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {msg: err.response.statusText, status: err.response.status}\r\n            });\r\n        }\r\n\r\n    }\r\n};\r\n","E:\\Portifolio\\EmployMe\\client\\src\\component\\layout\\Spinner.js",["196"],"import React, {Fragment} from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n    <Fragment >\r\n        <img\r\n            src={spinner}\r\n            style={{width: '200px', margin: 'auto', display: 'block'}}\r\n            alt={'Loading...'}\r\n        />\r\n    </Fragment>\r\n)","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile-form\\CreateProfile.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\dashboard\\DashboardAction.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profile-form\\EditProfile.js",["197"],"import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {createProfile, getCurrentProfile} from \"../../actions/profile\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst EditProfile = ({profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\r\n    const [formData, setFormData] = React.useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = React.useState(false);\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getCurrentProfile();\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.twitter ? '' : profile.twitter,\r\n            facebook: loading || !profile.facebook ? '' : profile.facebook,\r\n            linkedin: loading || !profile.linkedin ? '' : profile.linkedin,\r\n            youtube: loading || !profile.youtube ? '' : profile.youtube,\r\n            instagram: loading || !profile.instagram ? '' : profile.instagram,\r\n        })\r\n    }, [loading, getCurrentProfile])\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            {!loading && profile !== null ? (\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n                            <option value=\"0\">* Select Professional Status</option>\r\n                            <option value=\"Developer\">Developer</option>\r\n                            <option value=\"Junior Developer\">Junior Developer</option>\r\n                            <option value=\"Senior Developer\">Senior Developer</option>\r\n                            <option value=\"Manager\">Manager</option>\r\n                            <option value=\"Student or Learning\">Student or Learning</option>\r\n                            <option value=\"Instructor\">Instructor or Teacher</option>\r\n                            <option value=\"Intern\">Intern</option>\r\n                            <option value=\"Other\">Other</option>\r\n                        </select>\r\n                        <small className=\"form-text\"\r\n                        >Give us an idea of where you are at in your career</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\r\n                        <small className=\"form-text\"\r\n                        >Could be your own company or one you work for</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n                        <small className=\"form-text\"\r\n                        >Could be your own or a company website</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n                        <small className=\"form-text\"\r\n                        >City & state suggested (eg. Boston, MA)</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n                        <small className=\"form-text\"\r\n                        >Please use comma separated values (eg.\r\n                            HTML,CSS,JavaScript,PHP)</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Github Username\"\r\n                            name=\"githubusername\"\r\n                            value={githubusername} onChange={e => onChange(e)}\r\n                        />\r\n                        <small className=\"form-text\"\r\n                        >If you want your latest repos and a Github link, include your\r\n                            username</small\r\n                        >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n                        <small className=\"form-text\">Tell us a little about yourself</small>\r\n                    </div>\r\n\r\n                    <div className=\"my-2\">\r\n                        <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n                            Add Social Network Links\r\n                        </button>\r\n                        <span>Optional</span>\r\n                    </div>\r\n\r\n                    {displaySocialInputs && <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\r\n                        </div>\r\n\r\n                    </Fragment>}\r\n\r\n                    <input type=\"submit\" className=\"btn btn-primary my-1\"/>\r\n                    <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n                </form>\r\n\r\n            ) : (\r\n                <Spinner />\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile}) (withRouter(EditProfile));","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile-form\\AddExperience.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profile-form\\AddEducation.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\dashboard\\Experience.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\dashboard\\Education.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profiles\\Profiles.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profiles\\ProfileItem.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\Profile.js",["198"],"import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from \"../layout/Spinner\";\r\nimport {getProfileById} from \"../../actions/profile\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport ProfileGithub from \"./ProfileGithub\";\r\n\r\nconst Profile = ({match, getProfileById, profile: {profile, loading}, auth}) => {\r\n\r\n    const {id}= useParams()\r\n\r\n    React.useEffect(() => {\r\n        getProfileById(id)\r\n    }, [getProfileById]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? <Spinner/> : <Fragment>\r\n                <Link to={'/profiles'} className={'btn btn-light'}>\r\n                    Back To Profiles\r\n                </Link>\r\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (\r\n                    <Link to={'/edit-profile'} className={'btn btn-dark'} >Edit Profile</Link>\r\n                )}\r\n                <div className=\"profile-grid my-1\">\r\n                    <ProfileTop profile={profile} />\r\n                    <ProfileAbout profile={profile} />\r\n                    <div className=\"profile-exp bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Experience</h2>\r\n                        {profile.experience.length > 0 ? (<Fragment>\r\n                            {profile.experience.map(experience => (\r\n                                <ProfileExperience key={experience._id} experience={experience} />\r\n                            ))}\r\n                        </Fragment>) : (<h4>NO experience credentials</h4>)}\r\n                    </div>\r\n                    <div className=\"profile-edu bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Education</h2>\r\n                        {profile.education.length > 0 ? (<Fragment>\r\n                            {profile.education.map(education => (\r\n                                <ProfileEducation key={education._id} education={education} />\r\n                            ))}\r\n                        </Fragment>) : (<h4>NO education credentials</h4>)}\r\n                    </div>\r\n                    {profile.githubusername && (\r\n                        <ProfileGithub username={profile.githubusername} />\r\n                    )}\r\n                </div>\r\n            </Fragment> }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    getProfileById: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProfileById}) (Profile);","E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileTop.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileAbout.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileExperience.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileEducation.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\profile\\ProfileGithub.js",["199"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getGithubRepos} from \"../../actions/profile\";\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\r\n    React.useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos])\r\n\r\n    return (\r\n        <div className={'profile-github'}>\r\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n            {repos ===null? <Spinner /> : (\r\n                repos.map(repo => (\r\n                    <div key={repo._id} className={'repo bg-white p-1 my-1'} >\r\n                        <div>\r\n                            <h4>\r\n                                <a href={repo.html_url} target={'_blank'} rel={'noopener noreferrer'}>\r\n                                    {repo.name}\r\n                                </a>\r\n                            </h4>\r\n                            <p>{repo.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li className=\"badge badge-primary\">\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-primary\">\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-primary\">\r\n                                    Forks: {repo.forks_count}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos}) (ProfileGithub);","E:\\Portifolio\\EmployMe\\client\\src\\reducers\\post.js",["200"],"E:\\Portifolio\\EmployMe\\client\\src\\component\\posts\\Posts.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\actions\\post.js",["201"],"E:\\Portifolio\\EmployMe\\client\\src\\component\\posts\\PostItem.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\posts\\PostForm.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\post\\Post.js",["202"],"E:\\Portifolio\\EmployMe\\client\\src\\component\\post\\CommentForm.js",[],"E:\\Portifolio\\EmployMe\\client\\src\\component\\post\\CommentItem.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"203","replacedBy":"207"},{"ruleId":"205","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":4,"column":1,"nodeType":"211","endLine":17,"endColumn":2},{"ruleId":"209","severity":1,"message":"210","line":15,"column":1,"nodeType":"211","endLine":45,"endColumn":2},{"ruleId":"209","severity":1,"message":"210","line":11,"column":1,"nodeType":"211","endLine":50,"endColumn":2},{"ruleId":"212","severity":1,"message":"213","line":224,"column":19,"nodeType":"214","messageId":"215","endLine":224,"endColumn":22},{"ruleId":"209","severity":1,"message":"216","line":4,"column":1,"nodeType":"211","endLine":12,"endColumn":2},{"ruleId":"217","severity":1,"message":"218","line":64,"column":8,"nodeType":"219","endLine":64,"endColumn":36,"suggestions":"220"},{"ruleId":"217","severity":1,"message":"221","line":19,"column":8,"nodeType":"219","endLine":19,"endColumn":24,"suggestions":"222"},{"ruleId":"217","severity":1,"message":"223","line":10,"column":8,"nodeType":"219","endLine":10,"endColumn":24,"suggestions":"224"},{"ruleId":"209","severity":1,"message":"210","line":16,"column":1,"nodeType":"211","endLine":74,"endColumn":2},{"ruleId":"212","severity":1,"message":"213","line":147,"column":15,"nodeType":"214","messageId":"215","endLine":147,"endColumn":18},{"ruleId":"217","severity":1,"message":"221","line":16,"column":8,"nodeType":"219","endLine":16,"endColumn":26,"suggestions":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],["226"],["227"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["228"],"React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["229"],"React Hook React.useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["230"],["231"],"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.twitter, profile.facebook, profile.linkedin, profile.youtube, profile.instagram]",{"range":"240","text":"241"},"Update the dependencies array to be: [getProfileById, id]",{"range":"242","text":"243"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"244","text":"245"},"Update the dependencies array to be: [getPost, id, loading]",{"range":"246","text":"247"},[2271,2299],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.twitter, profile.facebook, profile.linkedin, profile.youtube, profile.instagram]",[681,697],"[getProfileById, id]",[337,353],"[getGithubRepos, username]",[527,545],"[getPost, id, loading]"]